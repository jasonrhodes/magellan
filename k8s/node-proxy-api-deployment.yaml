apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    co.elastic.description: some other description
    co.elastic.ecs: some other group
  creationTimestamp: null
  labels:
    io.kompose.service: node-proxy-api
  name: node-proxy-api
spec:
  replicas: 5
  selector:
    matchLabels:
      io.kompose.service: node-proxy-api
  strategy: {}
  template:
    metadata:
      annotations:
        co.elastic.description: some other description
        co.elastic.ecs: some other group
      creationTimestamp: null
      labels:
        io.kompose.network/magellan-back: "true"
        io.kompose.network/magellan-front: "true"
        io.kompose.service: node-proxy-api
    spec:
      containers:
        - image: rhodesjason/magellan-nodejs-backend-1
          name: node-proxy-api
          ports:
            - containerPort: 3000
          resources: {}
          env:
            - name: ELASTIC_APM_SERVER_URL
              valueFrom:
                secretKeyRef:
                  name: apm-server-config
                  key: url
                  optional: false
            - name: ELASTIC_APM_SECRET_TOKEN
              valueFrom:
                secretKeyRef:
                  name: apm-server-config
                  key: token
                  optional: false
            - name: ELASTIC_APM_ENVIRONMENT
              value: production
            - name: ELASTIC_APM_SERVICE_NAME
              value: magellan-nodejs
      restartPolicy: Always
status: {}

# spec:
#   containers:
#   - name: mycontainer
#     image: redis
#     env:
#       - name: SECRET_USERNAME
#         valueFrom:
#           secretKeyRef:
#             name: mysecret
#             key: username
#             optional: false # same as default; "mysecret" must exist
#                             # and include a key named "username"